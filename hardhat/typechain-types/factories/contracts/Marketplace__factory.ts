/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../contracts/Marketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gwcToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NFTListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NFTSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "NFTUnlisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "BASIS_POINTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gwcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "unlistNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "updatePlatformFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100cc57601f610c6038819003918201601f19168301916001600160401b038311848410176100d15780849260409485528339810103126100cc57610052602061004b836100e7565b92016100e7565b60008054336001600160a01b0319808316821784556040519590946001600160a01b03949093859391908416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805560c86005551683600254161760025516906003541617600355610b6490816100fc8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100cc5756fe608060408181526004908136101561001657600080fd5b600092833560e01c90816326232a2e146109e95750806351ed82881461060e578063715018a6146105b15780638da5cb5b1461058957806394383f1414610359578063961f09441461029e578063aa0b59881461023d578063d56d229d14610214578063de74e57b146101c8578063e1f1c4a7146101ab578063edcea0bc1461017e5763f2fde38b146100a857600080fd5b3461017a57602036600319011261017a576001600160a01b03823581811693919290849003610176576100d9610a05565b8315610124575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b8280fd5b8382346101a757816003193601126101a75760025490516001600160a01b039091168152602090f35b5080fd5b8382346101a757816003193601126101a757602090516127108152f35b50903461017a57602036600319011261017a57606092818392358252602052209060018060a01b038254169160ff60026001830154920154169082519384526020840152151590820152f35b8382346101a757816003193601126101a75760035490516001600160a01b039091168152602090f35b50903461017a57602036600319011261017a5780359161025b610a05565b6103e8831161026c57505060055580f35b906020606492519162461bcd60e51b8352820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152fd5b503461017a57602036600319011261017a5781358084526020839052818420549092906001600160a01b031633036103265790600291838552806020526102ec60ff84848820015416610ad5565b838552602052832001805460ff1916905533907fb765e971c123cbdac007f49987b1aac638149f995ba62034fc509604cac5f01e8380a380f35b6020606492519162461bcd60e51b8352820152600e60248201526d2737ba103a34329039b2b63632b960911b6044820152fd5b508290346101a757806003193601126101a75760035481516331a9108f60e11b815284358186018190526001600160a01b0395602480359592946020949089169085818481855afa90811561057f578991610562575b5089339116036105315786156104f05784829185519283809263020604bf60e21b82528a888301525afa9081156104e65788916104b9575b508830911603610479575060027f5f9c03de076f5063cd3ebcfe8ef7aa8af378e4b35a83c77ba9777e97083879a29495969783519061042582610a5d565b338252858201908982528583019460018652898c528752858b209251166bffffffffffffffffffffffff60a01b835416178255516001820155019051151560ff80198354169116179055519384523393a380f35b60649360189293519362461bcd60e51b85528401528201527f4d61726b6574706c616365206e6f7420617070726f76656400000000000000006044820152fd5b6104d99150853d87116104df575b6104d18183610a8f565b810190610ab1565b896103e7565b503d6104c7565b84513d8a823e3d90fd5b50606493601c9293519362461bcd60e51b85528401528201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152fd5b50606493600d9293519362461bcd60e51b85528401528201526c2737ba103a34329037bbb732b960991b6044820152fd5b6105799150863d88116104df576104d18183610a8f565b8a6103af565b85513d8b823e3d90fd5b8382346101a757816003193601126101a757905490516001600160a01b039091168152602090f35b833461060b578060031936011261060b576105ca610a05565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b503461017a576020806003193601126109e557823590600280600154146109a257806001558286528482528386209084519061064982610a5d565b60018060a01b039283815416835261067860ff8360018401549388870194855201541615158089860152610ad5565b83835116331461095f57519660055480890290898204148915171561094c57612710900480890390898211610939578a876106ef8887541689895116958d519485809481936323b872dd60e01b9a8b8452338d850160409194939294606082019560018060a01b0380921683521660208201520152565b03925af190811561092f578c91610912575b50156108cf5783548b548a51848152338682019081529189166001600160a01b031660208301526040820193909352889183919089169082908f90829060600103925af19081156108c5578b91610898575b501561084b57898560035416918686511692803b1561017a578a519182526001600160a01b03909316848201908152336020820152604081018a90529092839182908490829060600103925af18015610841576107f3575b50858952845285882001805460ff1916905551935194855233949316927f8562eb94748e30bb0071e932744ce902b460c683474fcb3bfd567ffa16b1afb29190a46001805580f35b67ffffffffffffffff819a929a1161082e578752977f8562eb94748e30bb0071e932744ce902b460c683474fcb3bfd567ffa16b1afb26107ab565b634e487b7160e01b825260418a52602482fd5b88513d8c823e3d90fd5b875162461bcd60e51b8152808301879052602160248201527f546f6b656e207472616e7366657220746f20706c6174666f726d206661696c656044820152601960fa1b6064820152608490fd5b6108b89150873d89116108be575b6108b08183610a8f565b810190610b16565b38610753565b503d6108a6565b89513d8d823e3d90fd5b885162461bcd60e51b8152808401889052601f60248201527f546f6b656e207472616e7366657220746f2073656c6c6572206661696c6564006044820152606490fd5b6109299150883d8a116108be576108b08183610a8f565b38610701565b8a513d8e823e3d90fd5b634e487b7160e01b8b526011835260248bfd5b634e487b7160e01b8a526011825260248afd5b865162461bcd60e51b8152808901869052601760248201527f43616e6e6f742062757920796f7572206f776e204e46540000000000000000006044820152606490fd5b835162461bcd60e51b8152808601839052601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b8380fd5b8490346101a757816003193601126101a7576020906005548152f35b6000546001600160a01b03163303610a1957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6060810190811067ffffffffffffffff821117610a7957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610a7957604052565b90816020910312610ad057516001600160a01b0381168103610ad05790565b600080fd5b15610adc57565b60405162461bcd60e51b81526020600482015260126024820152714c697374696e67206e6f742061637469766560701b6044820152606490fd5b90816020910312610ad057518015158103610ad0579056fea2646970667358221220b4cea870d0c747359da5318808d3fc493cebf9b98f6c7965375b22214217f10b64736f6c63430008140033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _gwcToken: AddressLike,
    _nftContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_gwcToken, _nftContract, overrides || {});
  }
  override deploy(
    _gwcToken: AddressLike,
    _nftContract: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_gwcToken, _nftContract, overrides || {}) as Promise<
      Marketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Marketplace__factory {
    return super.connect(runner) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new Interface(_abi) as MarketplaceInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Marketplace {
    return new Contract(address, _abi, runner) as unknown as Marketplace;
  }
}
