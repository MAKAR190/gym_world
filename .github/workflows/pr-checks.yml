name: Pull Request Checks

on:
  pull_request:
    branches:
      - main

jobs:
  eslint:
    name: Lint Codebase
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run ESLint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx

  expo-test:
    name: Test Expo Deployment
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Validate Expo Project
        run: npx expo-doctor

  sentry-release:
    name: Create Sentry Release
    runs-on: ubuntu-latest
    needs: [eslint, expo-test]
    environment: pr-checks

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Install Sentry CLI
        run: npm install -g @sentry/cli

      - name: Set Debug Log Level for Sentry CLI
        run: |
          export SENTRY_RELEASE="pr-${{ github.event.pull_request.number }}"
          sentry-cli releases new $SENTRY_RELEASE --org ${{ secrets.SENTRY_ORG_SLUG }} --project ${{ secrets.SENTRY_PROJECT_SLUG }}
          sentry-cli releases set-commits --auto $SENTRY_RELEASE --org ${{ secrets.SENTRY_ORG_SLUG }} --project ${{ secrets.SENTRY_PROJECT_SLUG }}
          sentry-cli releases finalize $SENTRY_RELEASE --org ${{ secrets.SENTRY_ORG_SLUG }} --project ${{ secrets.SENTRY_PROJECT_SLUG }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG_SLUG: ${{ secrets.SENTRY_ORG_SLUG }}
          SENTRY_PROJECT_SLUG: ${{ secrets.SENTRY_PROJECT_SLUG }}
          ENTRY_LOG_LEVEL: debug

      - name: Upload Source Maps (Optional, if using JS/TS with sourcemaps)
        run: |
          sentry-cli releases files $SENTRY_RELEASE upload-sourcemaps ./build --url-prefix '~/static/js' --validate --org ${{ secrets.SENTRY_ORG_SLUG }} --project ${{ secrets.SENTRY_PROJECT_SLUG }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG_SLUG: ${{ secrets.SENTRY_ORG_SLUG }}
          SENTRY_PROJECT_SLUG: ${{ secrets.SENTRY_PROJECT_SLUG }}
        if: success()

      - name: Notify Sentry of New Deployment
        run: |
          sentry-cli releases deploys $SENTRY_RELEASE new -e production --org ${{ secrets.SENTRY_ORG_SLUG }} --project ${{ secrets.SENTRY_PROJECT_SLUG }} --release $SENTRY_RELEASE
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG_SLUG: ${{ secrets.SENTRY_ORG_SLUG }}
          SENTRY_PROJECT_SLUG: ${{ secrets.SENTRY_PROJECT_SLUG }}
          SENTRY_RELEASE: ${{ secrets.SENTRY_RELEASE }}
        if: success()
